using Assets.Enums;
using UnityEngine;

public class Invulnerability : MonoBehaviour
{
    [Range(0f, 5f)]
    [SerializeField]
    private float invulnerabilityTime = 2f;

    [SerializeField]
    private Layers defaultPlayerLayer = Layers.Player;

    private SpriteRenderer spriteRenderer;

    private bool invulnerabilityStatus = false;
    private float flashDuration = 0.5f;

    private void Start()
    {
        spriteRenderer = GetSpriteRenderer();

        MakePlayerInvulnerable();
        EndInvulnerabilityAfter(invulnerabilityTime);
    }

    private void Update()
    {
        if (PlayerIsInvulnerable(invulnerabilityStatus, flashDuration))
        {
            FlashPlayer(spriteRenderer);
        }
        else
        {
            ReduceFlashDuration(ref flashDuration);
        }
    }

    private SpriteRenderer GetSpriteRenderer()
    {
        var spriteRenderer = GetComponent<SpriteRenderer>();
        if (spriteRenderer is null)
        {
            spriteRenderer = transform.GetComponentInChildren<SpriteRenderer>();
            if (spriteRenderer is null)
            {
                Debug.LogError($"Object { gameObject.name } has no sprite renderer");
            }
        }
        return spriteRenderer;
    }

    private void MakePlayerInvulnerable()
    {
        gameObject.layer = (int)Layers.Invulnerability;
        invulnerabilityStatus = true;
    }

    private void EndInvulnerabilityAfter(float invulnerabilityTime) => Invoke(nameof(EndInvulnerability), invulnerabilityTime);

    private void EndInvulnerability()
    {
        SetPlayerToLayer(defaultPlayerLayer);
        invulnerabilityStatus = false;
        MakePlayerVisible();
    }

    private void SetPlayerToLayer(Layers layer) => gameObject.layer = (int)layer;

    private void MakePlayerVisible() => spriteRenderer.enabled = true;

    private bool PlayerIsInvulnerable(bool invulnerabilityStatus, float flashDuration) => invulnerabilityStatus && flashDuration < 0;

    private void FlashPlayer(SpriteRenderer spriteRenderer) => spriteRenderer.enabled = !spriteRenderer.enabled;

    private void ReduceFlashDuration(ref float flashDuration) => flashDuration -= (0.8f * Time.deltaTime);
}